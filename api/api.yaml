openapi: 3.0.3
servers:
  - url: https://tracker-api.pepega.chat
info:
  title: Emote Tracker API
  description: The Rest API for the Emote Tracker
  version: 1.0.0
paths:
  /user/register:
    get:
      tags:
        - registration
      summary: Register a new user to track the emote usage
      operationId: registerNewUser
      parameters:
        - in: query
          name: userId
          required: true
          description: Twitch User ID
          schema:
            type: string
      responses:
        201:
          description: Successfully registered new user
          content:
            'application/json':
              schema:
                type: string
        304:
          description: Nothing was changed. User already registered
          content:
            'application/json':
              schema:
                type: string

  /user/unregister:
    get:
      tags:
        - registration
      operationId: unregisterUser
      parameters:
        - in: query
          name: userId
          required: true
          description: Twitch User ID
          schema:
            type: string
      responses:
        200:
          description: Successfully unregistered user
          content:
            'application/json':
              schema:
                type: string
        304:
          description: Nothing was changed. User already unregistered/ never registered
          content:
            'application/json':
              schema:
                type: string
  /user:
    get:
      tags:
        - user
      operationId: getAllUsers
      responses:
        200:
          description: Successfully got all users
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SimpleUser'

  /user/{userId}:
    get:
      tags:
        - user
      operationId: getUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully got user overview
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SimpleUser'

  /user/{userId}/emotes/count/top:
    get:
      tags:
        - user
      operationId: getTopEmotes
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: count
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Successfully retrieved top emotes based on their usage count
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmoteCount'
        404:
          description: User not found

  /user/{userId}/emotes/count/bottom:
    get:
      tags:
        - user
      operationId: getBottomEmotes
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: count
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Successfully retrieved bottom emotes based on their usage count
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmoteCount'
        404:
          description: User not found

  /user/{userId}/emotes/update:
    patch:
      tags:
        - user
      operationId: updateEmotesForUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Updated emote set successfully
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/EmoteUpdateLog'

components:
  schemas:
    Emote:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string

    EmoteCount:
      allOf:
        - $ref: '#/components/schemas/Emote'
        - type: object
          required:
            - count
          properties:
            count:
              type: integer
              format: int64
    EmoteUpdate:
      allOf:
        - $ref: '#/components/schemas/Emote'
        - type: object
          properties:
            oldName:
              type: string
    SimpleUser:
      type: object
      required:
        - id
        - name
        - profilePicture
        - registered
        - lastUpdated
      properties:
        id:
          type: string
        name:
          type: string
        profilePicture:
          type: string
        registered:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time

    EmoteUpdateLog:
      type: object
      properties:
        added:
          type: array
          items:
            $ref: '#/components/schemas/Emote'
        removed:
          type: array
          items:
            $ref: '#/components/schemas/Emote'
        renamed:
          type: array
          items:
            $ref: '#/components/schemas/EmoteUpdate'
